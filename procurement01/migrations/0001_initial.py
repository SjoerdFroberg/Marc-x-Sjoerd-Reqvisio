# Generated by Django 4.2.16 on 2024-11-28 20:59

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company_type', models.CharField(choices=[('Procurer', 'Procurer'), ('Supplier', 'Supplier')], max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('procurer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='procurement01.company')),
            ],
        ),
        migrations.CreateModel(
            name='GeneralQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('question_type', models.CharField(choices=[('text', 'Text'), ('Single-select', 'Single-select'), ('Multi-select', 'Multi-select'), ('File upload', 'File upload')], max_length=200)),
                ('multiple_choice_options', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RFP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RFP_SKUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('extra_data', models.TextField(blank=True, null=True)),
                ('rfp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procurement01.rfp')),
            ],
        ),
        migrations.CreateModel(
            name='SKUSpecificQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('question_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('file', 'File Upload'), ('date', 'Date'), ('Single-select', 'Single-select'), ('Multi-select', 'Multi-select')], max_length=50)),
                ('rfp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sku_specific_questions', to='procurement01.rfp')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_finalized', models.BooleanField(default=False)),
                ('rfp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='procurement01.rfp')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procurement01.company')),
            ],
        ),
        migrations.CreateModel(
            name='SKUSpecificQuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('answer_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('answer_file', models.FileField(blank=True, null=True, upload_to='responses/files/')),
                ('answer_date', models.DateField(blank=True, null=True)),
                ('answer_choice', models.TextField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procurement01.skuspecificquestion')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sku_question_responses', to='procurement01.supplierresponse')),
                ('rfp_sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procurement01.rfp_skus')),
            ],
        ),
        migrations.CreateModel(
            name='SKU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sku_code', models.CharField(max_length=50, unique=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procurement01.company')),
            ],
        ),
        migrations.CreateModel(
            name='RFPInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=64, unique=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('is_accepted', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('rfp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='procurement01.rfp')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfp_invitations', to='procurement01.company')),
            ],
        ),
        migrations.CreateModel(
            name='RFPFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='rfp_files/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('rfp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='procurement01.rfp')),
            ],
        ),
        migrations.AddField(
            model_name='rfp_skus',
            name='sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procurement01.sku'),
        ),
        migrations.CreateModel(
            name='GeneralQuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('answer_choice', models.TextField(blank=True, null=True)),
                ('answer_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('answer_date', models.DateField(blank=True, null=True)),
                ('answer_file', models.FileField(blank=True, null=True, upload_to='responses/files/')),
                ('invitation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procurement01.rfpinvitation')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procurement01.generalquestion')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_responses', to='procurement01.supplierresponse')),
            ],
        ),
        migrations.AddField(
            model_name='generalquestion',
            name='rfp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_questions', to='procurement01.rfp'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='procurement01.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
